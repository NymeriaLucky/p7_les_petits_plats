Dans src : 3 dossiers :
           js
           Public : images
                    index.html
           style : fichiers sass(scss)

Dans src/js :
data.js : tableau (array) de toutes les recettes(énumération et composition complète)

datalogic.js : import data from "./data";
               import state from "./state";
               import { normalizeText } from "./utils";
               
               fonctionnalités js:
               
               - Obtenir une liste de tous les ingredients de recettes
               - Obtenir une liste de tous les appareils ménagers de toutes les recettes
               - Obtenir une liste de tous les ustensils de cuisine de toutes les recettes
               - Obtenir une liste de tous les identifiants de recettes
               - Initialiser l'état avec les données initiales
               - Obtenir une seule chaîne avec tous les ingrédients d'une recette
               - Obtenir une liste de tous les ingredients(Objets) de toutes les recettes sous forme de tableau
               - Obtenir un objet avec tous les noms d'ingrédients
               - Obtenir un objet avec tous les noms d'appareils
               - Obtenir un objet avec tous les noms d'ustensils
               - Obtenir les données de recettes complètes à partir des identifiants sous forme de tableau


filters.js : import state from "./state";
             import { completeSearch } from "./search";
             import { createGenericElt, createLinkElt, normalizeText } from "./utils";
             import { createAllLabels } from "./labels";
             
             fonctionnalités js:
             Déclaration des DOM variables
             - Créer un élément filtrant de type ing, app or ust, nommer le contenu du filtre(type, nom)
             - Ajouter un filtre au Click, nommer le contenu du filtre
             - Créer un élément de liste avec tous les filtres d'un type
             - Remplit la liste des filtres avec les données de l'état(ing, app, ust)
             - Affiche les filtres initiaux
             - Gérer les mouvements de la liste de filtres(Événement de navigateur evt )
             - Fermer tous les filtres
             - Augmenter le filtre d'entrée
             - Ouvrir la liste de filtres
             - Réduire le filtre d'entrée
             - Fermer tous les filtres et les réduire
             - Fermer tous les filtres et les réduire
             - Effacer les éléments des filtres DOM
             - Obtenir le nombre de filtres ajoutés(ing + app + ust)
             - Effacer la valeur dans les entrées des filtres
             - Complétion automatique lors de la saisie des entrées du filtre
             - Afficher tous les tags dans le DOM

index.js : import { initializeState } from "./datalogic";
           import { initializeFilters } from "./filters";
           import { manageSearchInput } from "./search";

           import "../style/main.scss";
        fonctionnalités js:
             - Initialiser l'application 
             - Ajouter un écouteur(listener) à la barre de recherche


labels.js : import state from "./state";
            import { completeSearch } from "./search";
            import { createGenericElt, normalizeText } from "./utils";
        fonctionnalités js:
            Déclaration de DOM variables(labels)
            - Créer un seul élément d'étiquette(ing, app ou ust)
            - Créer toutes les étiquettes d'un type sous forme de liste(ing, app ou ust)
            - Créer les étiquettes(labels) de tous types(3)
            - Supprimer une étiquette
            
recipes.js : import data from "./data";
             import { createGenericElt, createLinkElt } from "./utils";
             
         fonctionnalités js:
              Déclaration de DOM variables(Elt)
              - Créer un modèle de recette unique
              - Créer un seul ingrédient
              - Créez toutes les recettes et les insérer dans le DOM
              - Afficher toutes les recettes dans le DOM
              - Vérifiez si la recette est déjà dans le DOM et la supprimer
            export {
                   displayAllRecipes,
                   createRecipeElement,
                   removeRecipeById,
                   createAllRecipes,
                   };
                   
search.js : import data from "./data";
            import state from "./state";
            import {
                getIngredientsStringFromRecipe,
                getFullRecipesFromIds,
                getAllRecipeIds,
                   } from "./datalogic";
            import { normalizeText } from "./utils";
            import {
                 getVisibleFilters,
                 createFilterElt,
                 clearAllFilters,
                 getAllFiltersLength,
                   } from "./filters";
            import {
                  createRecipeElement,
                  removeRecipeById,
                  createAllRecipes,
                   } from "./recipes";
                   
     fonctionnalités js:
               - Gérer les conditions de recherche algo
               - Rechercher des recettes à partir de l'entrée de recherche
               - Rechercher des recettes à partir de filtres
               - Afficher les filtres des recettes affichées
               - Afficher les filtres inclus dans les recettes affichées(ing,app,ust)
               - Afficher les filtres d'ingrédients inclus dans les recettes affichées
               - Afficher les filtres de l'appareil inclus dans les recettes affichées
               - Afficher les filtres à ustensils inclus dans les recettes affichées
               - Afficher "no result" le message d'erreur
               -  Toutes les étapes de la recherche
            export { manageSearchInput, completeSearch };
            
state.js : déclaration varaiable let state (array)
           export default state;
           
utils.js :  fonctionnalités js:
            - Créer un DOM element avec une classe (tag's name, tag's class)
            - Créer un element lien avec une classe(lien, contenu à afficher tag's class)
            - Obtienir une version normalisée d'un texte



Dans dossier dist:  images
                    index.html
                    main.css
                    main.js(bootstrap, jquery)      
            
            
            
             
             
 
               
               
